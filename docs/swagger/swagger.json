{
  "openapi": "3.0.0",
  "info": {
    "title": "Med-Connect",
    "version": "1.0.0",
    "description": "Project for CSE 341: Web Services"
  },
  "servers": [
    {
      "url": "https://med-connect-ear5.onrender.com",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Patients",
      "description": "Endpoints for managing patients"
    },
    {
      "name": "Appointments",
      "description": "Endpoints for managing appointments"
    },
    {
      "name": "Doctors",
      "description": "Endpoints for managing doctors"
    }
  ],
  "components": {
    "schemas": {
      "Patient": {
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "dateOfBirth",
          "gender",
          "phoneNumber",
          "email",
          "address"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "example": "1990-01-01"
          },
          "gender": {
            "type": "string",
            "example": "Male"
          },
          "phoneNumber": {
            "type": "string",
            "example": "123-456-7890"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "address": {
            "type": "string",
            "example": "123 Main St, Anytown, USA"
          },
          "medicalHistory": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Allergy to penicillin",
              "Previous surgery"
            ]
          }
        }
      },
      "Appointment": {
        "type": "object",
        "required": [
          "doctorId",
          "patientId",
          "date",
          "time",
          "reason"
        ],
        "properties": {
          "doctorId": {
            "type": "string",
            "example": "5f8d0d55b54764421b7160d6"
          },
          "patientId": {
            "type": "string",
            "example": "5f8d0d55b54764421b7160d7"
          },
          "date": {
            "type": "string",
            "format": "date",
            "example": "2023-12-01"
          },
          "time": {
            "type": "string",
            "format": "time",
            "example": "14:30"
          },
          "reason": {
            "type": "string",
            "example": "Routine check-up"
          },
          "notes": {
            "type": "string",
            "example": "Patient has been experiencing mild headaches."
          }
        }
      },
      "Doctor": {
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "dateOfBirth",
          "gender",
          "specialization",
          "phoneNumber",
          "email",
          "address"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Gregory"
          },
          "lastName": {
            "type": "string",
            "example": "House"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "example": "1990-01-01"
          },
          "gender": {
            "type": "string",
            "example": "Male"
          },
          "specialization": {
            "type": "string",
            "example": "Family Medicine"
          },
          "phoneNumber": {
            "type": "string",
            "example": "123-456-7890"
          },
          "email": {
            "type": "string",
            "example": "Gregory.House@example.com"
          },
          "address": {
            "type": "string",
            "example": "123 Main St, Anytown, USA"
          }
        }
      }
    }
  },
  "paths": {
    "/appointments": {
      "get": {
        "summary": "Get all appointments",
        "tags": [
          "Appointments"
        ],
        "responses": {
          "200": {
            "description": "A list of appointments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "post": {
        "summary": "Create a new appointment",
        "tags": [
          "Appointments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Appointment created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/appointments/{appointmentId}": {
      "get": {
        "summary": "Get appointment by ID",
        "tags": [
          "Appointments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The appointment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A single appointment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Appointment not found"
          }
        }
      },
      "put": {
        "summary": "Update an appointment",
        "tags": [
          "Appointments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The appointment ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Appointment updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Appointment not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an appointment",
        "tags": [
          "Appointments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The appointment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Appointment not found"
          }
        }
      }
    },
    "/appointments/doctor/{doctorId}": {
      "get": {
        "summary": "Get appointments by doctor ID",
        "tags": [
          "Appointments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "doctorId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The doctor ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of appointments for the doctor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Doctor not found or no appointments found for the doctor."
          }
        }
      }
    },
    "/appointments/patient/{patientId}": {
      "get": {
        "summary": "Get appointments by patient ID",
        "tags": [
          "Appointments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The patient ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of appointments for the patient",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Patient not found or no appointments found for the patient."
          }
        }
      }
    },
    "/doctors": {
      "get": {
        "summary": "Retrieve all doctors",
        "description": "Retrieve a list of all doctors.",
        "tags": [
          "Doctors"
        ],
        "responses": {
          "200": {
            "description": "A list of doctors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Doctor"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new doctor",
        "description": "Create a new doctor record.",
        "tags": [
          "Doctors"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Doctor"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Doctor created successfully."
          }
        }
      }
    },
    "/doctors/{doctorId}": {
      "get": {
        "summary": "Retrieve a doctor by ID",
        "description": "Retrieve a specific doctor by ID.",
        "tags": [
          "Doctors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "doctorId",
            "required": true,
            "description": "The ID of the doctor to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single doctor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Doctor"
                }
              }
            }
          },
          "404": {
            "description": "Doctor not found."
          }
        }
      },
      "put": {
        "summary": "Update a doctor",
        "description": "Update an existing doctor record.",
        "tags": [
          "Doctors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "doctorId",
            "required": true,
            "description": "The ID of the doctor to update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Doctor"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Doctor updated successfully."
          },
          "404": {
            "description": "Doctor not found."
          }
        }
      },
      "delete": {
        "summary": "Delete a doctor",
        "description": "Delete a doctor by ID.",
        "tags": [
          "Doctors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "doctorId",
            "required": true,
            "description": "The ID of the doctor to delete.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Doctor deleted successfully."
          },
          "404": {
            "description": "Doctor not found."
          }
        }
      }
    },
    "/patients": {
      "get": {
        "summary": "Retrieve all patients",
        "description": "Retrieve a list of all patients.",
        "tags": [
          "Patients"
        ],
        "responses": {
          "200": {
            "description": "A list of patients.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Patient"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new patient",
        "description": "Create a new patient record.",
        "tags": [
          "Patients"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patient"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Patient created successfully."
          }
        }
      }
    },
    "/patients/{patientId}": {
      "get": {
        "summary": "Retrieve a patient by ID",
        "description": "Retrieve a specific patient by ID.",
        "tags": [
          "Patients"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "patientId",
            "required": true,
            "description": "The ID of the patient to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single patient.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          },
          "404": {
            "description": "Patient not found."
          }
        }
      },
      "put": {
        "summary": "Update a patient",
        "description": "Update an existing patient record.",
        "tags": [
          "Patients"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "patientId",
            "required": true,
            "description": "The ID of the patient to update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patient"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patient updated successfully."
          },
          "404": {
            "description": "Patient not found."
          }
        }
      },
      "delete": {
        "summary": "Delete a patient",
        "description": "Delete a patient by ID.",
        "tags": [
          "Patients"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "patientId",
            "required": true,
            "description": "The ID of the patient to delete.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Patient deleted successfully."
          },
          "404": {
            "description": "Patient not found."
          }
        }
      }
    }
  }
}